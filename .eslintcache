[{"D:\\Software\\Proyects\\Web\\2021\\weatherAPP\\src\\index.js":"1","D:\\Software\\Proyects\\Web\\2021\\weatherAPP\\src\\reportWebVitals.js":"2","D:\\Software\\Proyects\\Web\\2021\\weatherAPP\\src\\App.js":"3","D:\\Software\\Proyects\\Web\\2021\\weatherAPP\\src\\state\\mainState.js":"4","D:\\Software\\Proyects\\Web\\2021\\weatherAPP\\src\\components\\navbar.jsx":"5","D:\\Software\\Proyects\\Web\\2021\\weatherAPP\\src\\components\\home.jsx":"6","D:\\Software\\Proyects\\Web\\2021\\weatherAPP\\src\\components\\form.jsx":"7","D:\\Software\\Proyects\\Web\\2021\\weatherAPP\\src\\components\\forecast.jsx":"8","D:\\Software\\Proyects\\Web\\2021\\weatherAPP\\src\\components\\display.jsx":"9","D:\\Software\\Proyects\\Web\\2021\\weatherAPP\\src\\components\\lineChart.jsx":"10","D:\\Software\\Proyects\\Web\\2021\\weatherAPP\\src\\components\\bigForecast.jsx":"11"},{"size":561,"mtime":1609720547229,"results":"12","hashOfConfig":"13"},{"size":375,"mtime":1609720547239,"results":"14","hashOfConfig":"13"},{"size":719,"mtime":1609809265776,"results":"15","hashOfConfig":"13"},{"size":1447,"mtime":1609809265780,"results":"16","hashOfConfig":"13"},{"size":551,"mtime":1609720547228,"results":"17","hashOfConfig":"13"},{"size":350,"mtime":1609809265778,"results":"18","hashOfConfig":"13"},{"size":4520,"mtime":1609809265778,"results":"19","hashOfConfig":"13"},{"size":1253,"mtime":1609813797197,"results":"20","hashOfConfig":"13"},{"size":1134,"mtime":1609809265776,"results":"21","hashOfConfig":"13"},{"size":1053,"mtime":1609813268364,"results":"22","hashOfConfig":"13"},{"size":294,"mtime":1609812357157,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"vac1pw",{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33","usedDeprecatedRules":"26"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36","usedDeprecatedRules":"26"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"26"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42","usedDeprecatedRules":"26"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"45","messages":"46","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"26"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"50","messages":"51","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"D:\\Software\\Proyects\\Web\\2021\\weatherAPP\\src\\index.js",[],["52","53"],"D:\\Software\\Proyects\\Web\\2021\\weatherAPP\\src\\reportWebVitals.js",[],"D:\\Software\\Proyects\\Web\\2021\\weatherAPP\\src\\App.js",[],"D:\\Software\\Proyects\\Web\\2021\\weatherAPP\\src\\state\\mainState.js",["54","55"],"import React, { Component, createContext } from \"react\";\r\n\r\nconst globalState = {\r\n  city: \"\",\r\n  country: \"\",\r\n  result: \"\",\r\n  temperatureSeason: \"\",\r\n  Rtemperature: 0,\r\n  FTemperature: 0,\r\n  Humidity: 0,\r\n  Pressure: 0,\r\n  forecast: {},\r\n  loading: false,\r\n  chatbot: false,\r\n};\r\n\r\nconst main = createContext(globalState);\r\n\r\nconst mainStateReducer = (state, action) => {\r\n  switch (action.type) {\r\n    case \"TOGGLE_MODAL\":\r\n      return { ...state, chatBot: !state.chatbot };\r\n    case \"CHANGE_CITY\":\r\n      return { ...state, city: action.payload.city };\r\n    case \"SET_STATE\":\r\n      return { ...state, result: action.payload.result };\r\n    case \"SET_COUNTRY\":\r\n      return { ...state, contry: action.payload.country };\r\n    case \"TEMPERATRUE_SEASON\":\r\n      return { ...state, temperatureSeason: action.payload.country };\r\n    case \"R_TEMPERATURE\":\r\n      return { ...state, Rtemperature: action.payload.Rtemperature };\r\n    case \"L_TEMPERATURE\":\r\n      return { ...state, Ltemperature: action.payload.Ltemperature };\r\n    case \"Humidity\":\r\n      return { ...state, Humidity: action.payload.Humidity };\r\n    case \"Pressure\":\r\n      return { ...state, Pressure: action.payload.Pressure };\r\n    case \"Forecast\":\r\n      return { ...state, forecast: action.payload.Forecast };\r\n    case \"Loading\":\r\n      return { ...state, loading: action.payload.loading };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport { main, mainStateReducer };\r\n","D:\\Software\\Proyects\\Web\\2021\\weatherAPP\\src\\components\\navbar.jsx",["56"],"import React from \"react\";\r\n\r\nconst NavBar = () => {\r\n  return (\r\n    <React.Fragment>\r\n      <nav className=\"navbar navbar-light bg-light\">\r\n        <div className=\"container\">\r\n          <a className=\"navbar-brand\">\r\n            <img\r\n              src=\"https://cdn.iconscout.com/icon/free/png-256/sunny-weather-1-458138.png\"\r\n              alt=\"\"\r\n              width=\"50\"\r\n              height=\"50\"\r\n            />\r\n            Daru Weather\r\n          </a>\r\n        </div>\r\n      </nav>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default NavBar;\r\n","D:\\Software\\Proyects\\Web\\2021\\weatherAPP\\src\\components\\home.jsx",["57"],"import React, { Component } from \"react\";\r\nimport Form from \"./form\";\r\nimport Display from \"./display\";\r\n\r\nimport \"../css/form.css\";\r\nimport CardsForecast from \"./forecast\";\r\n\r\nconst Home = () => {\r\n  return (\r\n    <React.Fragment>\r\n      <Form />\r\n      <Display />\r\n      <CardsForecast />\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","D:\\Software\\Proyects\\Web\\2021\\weatherAPP\\src\\components\\form.jsx",["58","59","60","61","62","63","64"],"import React, { Component, useContext, useState } from \"react\";\r\nimport axios from \"axios\";\r\n\r\nimport { main } from \"../state/mainState\";\r\n\r\nimport \"../css/form.css\";\r\n\r\nconst Form = () => {\r\n  let { state: globalState, dispatch } = useContext(main);\r\n\r\n  let [keyword, setKeyword] = useState(\"\");\r\n\r\n  let [cities, setCities] = useState([]);\r\n\r\n  let [loading, setLoading] = useState(false);\r\n  let [error, setError] = useState(false);\r\n\r\n  let [fields, setFields] = useState({\r\n    username: \"\",\r\n    password: \"\",\r\n    email: \"\",\r\n    name: \"\",\r\n    phone: \"\",\r\n    age: 0,\r\n  });\r\n\r\n  const onFieldChange = (e) => {\r\n    let { id, value } = e.target;\r\n\r\n    let fieldsCopy = { ...fields };\r\n\r\n    fieldsCopy[id] = value;\r\n  };\r\n\r\n  const handleSearch = async (name, url) => {\r\n    const city = name;\r\n\r\n    try {\r\n      setLoading(true);\r\n      dispatch({ type: \"Loading\", payload: { loading: true } });\r\n\r\n      // const data = await axios.get(\r\n      //   `http://api.openweathermap.org/data/2.5/weather?q=${city}&appid=c41d6eca7b601b2cc4a19fbac586dc5e`\r\n      // );\r\n      const data4days = await axios.get(\r\n        `http://api.weatherapi.com/v1/forecast.json?key=139f916626ab43b9a1d44405210401&q=${city}&days=7`\r\n      );\r\n\r\n      dispatch({ type: \"Forecast\", payload: { Forecast: data4days } });\r\n\r\n      // dispatch({\r\n      //   type: \"SET_STATE\",\r\n      //   payload: { result: data.data.weather[0].description },\r\n      // });\r\n\r\n      // dispatch({\r\n      //   type: \"SET_COUNTRY\",\r\n      //   payload: { country: data.data.sys.country },\r\n      // });\r\n\r\n      // dispatch({\r\n      //   type: \"TEMPERATRUE_SEASON\",\r\n      //   payload: { temperatureSeason: data.data.weather[0].main },\r\n      // });\r\n\r\n      // dispatch({\r\n      //   type: \"R_TEMPERATURE\",\r\n      //   payload: { Rtemperature: data.data.main.temp },\r\n      // });\r\n\r\n      // dispatch({\r\n      //   type: \"L_TEMPERATURE\",\r\n      //   payload: { Ltemperature: data.data.main.feels_like },\r\n      // });\r\n\r\n      // dispatch({\r\n      //   type: \"Humidity\",\r\n      //   payload: { Humidity: data.data.main.humidity },\r\n      // });\r\n\r\n      // dispatch({\r\n      //   type: \"Pressure\",\r\n      //   payload: { Pressure: data.data.main.pressure },\r\n      // });\r\n    } catch (err) {\r\n      setLoading(false);\r\n\r\n      setError(true);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n    dispatch({ type: \"Loading\", payload: { loading: false } });\r\n  };\r\n\r\n  const onCitySelect = (name, url) => {\r\n    setKeyword(name);\r\n    handleSearch(name, url);\r\n    setCities([]);\r\n  };\r\n\r\n  let renderCities = cities.map(({ id, name, region, url }) => {\r\n    return (\r\n      <CityOption\r\n        key={id}\r\n        id={id}\r\n        url={url}\r\n        onCitySelect={onCitySelect}\r\n        name={name}\r\n        region={region}\r\n      />\r\n    );\r\n  });\r\n\r\n  const handleChange = async (e) => {\r\n    setKeyword(e.target.value);\r\n\r\n    if (e.target.value.length == 0) return;\r\n\r\n    const apiKey = \"139f916626ab43b9a1d44405210401\";\r\n\r\n    try {\r\n      let { data } = await axios.get(\r\n        `http://api.weatherapi.com/v1/search.json?key=${apiKey}&q=${e.target.value}`\r\n      );\r\n\r\n      setCities(data);\r\n    } catch (err) {\r\n      console.log(err.message);\r\n    }\r\n\r\n    //api call\r\n\r\n    // dispatch({ type: \"CHANGE_CITY\", payload: { city: e.currentTarget.value } });\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <div className=\"test\">\r\n        <form className=\"search\" autocomplete=\"off\" onSubmit={() => {}}>\r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"cityname\">Write the name of your city here:</label>\r\n            <input\r\n              value={keyword}\r\n              id=\"cityname\"\r\n              type=\"text\"\r\n              autocomplete=\"ÑÖcompletes\"\r\n              name=\"city\"\r\n              className=\"form-control\"\r\n              onChange={handleChange}\r\n            />\r\n            <div className=\"centered\">\r\n              <div>{renderCities}</div>\r\n            </div>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nconst CityOption = ({ name, id, url, region, onCitySelect }) => {\r\n  let [isHovering, setHovering] = useState(false);\r\n\r\n  return (\r\n    <div\r\n      className={`autocomplete-items flex-column ${\r\n        isHovering ? \"bg-light\" : \"\"\r\n      }`}\r\n      onMouseEnter={() => setHovering(true)}\r\n      onMouseLeave={() => setHovering(false)}\r\n      onClick={() => onCitySelect(name, url)}\r\n    >\r\n      <p>{name}</p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Form;\r\n","D:\\Software\\Proyects\\Web\\2021\\weatherAPP\\src\\components\\forecast.jsx",["65","66","67","68","69","70"],"D:\\Software\\Proyects\\Web\\2021\\weatherAPP\\src\\components\\display.jsx",["71","72","73","74"],"import React, { Component, useContext } from \"react\";\r\n\r\nimport { main } from \"../state/mainState\";\r\n\r\nimport \"../css/form.css\";\r\n\r\nconst Display = () => {\r\n  let { state: globalState, dispatch } = useContext(main);\r\n  let currentDate = new Date().toLocaleDateString();\r\n\r\n  return (\r\n    <React.Fragment>\r\n      {/* <div className=\"flex_right weather_Font\">\r\n        <div className=\"display_flex_parent\">\r\n          <div className=\"display_flex_left\">\r\n            <p className=\"big_font\">{globalState.Rtemperature}°K</p>\r\n            <p className=\"grey_font\">{globalState.Ltemperature}°K</p>\r\n            <p className=\"small_font\">Humidity: {globalState.Humidity}</p>\r\n            <p className=\"small_font\">Pressure: {globalState.Pressure}</p>\r\n          </div>\r\n          <div className=\"display_flex_right medium_font\">\r\n            <p>{currentDate}</p>\r\n            <p>{globalState.temperatureSeason}</p>\r\n            <p>{`${globalState.city}, ${globalState.country}`}</p>\r\n            <p>{globalState.result}</p>\r\n          </div>\r\n        </div>\r\n      </div> */}\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default Display;\r\n","D:\\Software\\Proyects\\Web\\2021\\weatherAPP\\src\\components\\lineChart.jsx",["75"],"D:\\Software\\Proyects\\Web\\2021\\weatherAPP\\src\\components\\bigForecast.jsx",["76","77"],{"ruleId":"78","replacedBy":"79"},{"ruleId":"80","replacedBy":"81"},{"ruleId":"82","severity":1,"message":"83","line":1,"column":8,"nodeType":"84","messageId":"85","endLine":1,"endColumn":13},{"ruleId":"82","severity":1,"message":"86","line":1,"column":17,"nodeType":"84","messageId":"85","endLine":1,"endColumn":26},{"ruleId":"87","severity":1,"message":"88","line":8,"column":11,"nodeType":"89","endLine":8,"endColumn":39},{"ruleId":"82","severity":1,"message":"86","line":1,"column":17,"nodeType":"84","messageId":"85","endLine":1,"endColumn":26},{"ruleId":"82","severity":1,"message":"86","line":1,"column":17,"nodeType":"84","messageId":"85","endLine":1,"endColumn":26},{"ruleId":"82","severity":1,"message":"90","line":9,"column":16,"nodeType":"84","messageId":"85","endLine":9,"endColumn":27},{"ruleId":"82","severity":1,"message":"91","line":15,"column":8,"nodeType":"84","messageId":"85","endLine":15,"endColumn":15},{"ruleId":"82","severity":1,"message":"92","line":16,"column":8,"nodeType":"84","messageId":"85","endLine":16,"endColumn":13},{"ruleId":"82","severity":1,"message":"93","line":18,"column":16,"nodeType":"84","messageId":"85","endLine":18,"endColumn":25},{"ruleId":"82","severity":1,"message":"94","line":27,"column":9,"nodeType":"84","messageId":"85","endLine":27,"endColumn":22},{"ruleId":"95","severity":1,"message":"96","line":117,"column":31,"nodeType":"97","messageId":"98","endLine":117,"endColumn":33},{"ruleId":"82","severity":1,"message":"86","line":1,"column":17,"nodeType":"84","messageId":"85","endLine":1,"endColumn":26},{"ruleId":"82","severity":1,"message":"99","line":1,"column":40,"nodeType":"84","messageId":"85","endLine":1,"endColumn":49},{"ruleId":"82","severity":1,"message":"100","line":1,"column":51,"nodeType":"84","messageId":"85","endLine":1,"endColumn":59},{"ruleId":"82","severity":1,"message":"101","line":4,"column":8,"nodeType":"84","messageId":"85","endLine":4,"endColumn":19},{"ruleId":"82","severity":1,"message":"102","line":8,"column":29,"nodeType":"84","messageId":"85","endLine":8,"endColumn":37},{"ruleId":"103","severity":1,"message":"104","line":27,"column":7,"nodeType":"89","endLine":27,"endColumn":59},{"ruleId":"82","severity":1,"message":"86","line":1,"column":17,"nodeType":"84","messageId":"85","endLine":1,"endColumn":26},{"ruleId":"82","severity":1,"message":"90","line":8,"column":16,"nodeType":"84","messageId":"85","endLine":8,"endColumn":27},{"ruleId":"82","severity":1,"message":"102","line":8,"column":29,"nodeType":"84","messageId":"85","endLine":8,"endColumn":37},{"ruleId":"82","severity":1,"message":"105","line":9,"column":7,"nodeType":"84","messageId":"85","endLine":9,"endColumn":18},{"ruleId":"106","severity":1,"message":"107","line":17,"column":25,"nodeType":"108","messageId":"109","endLine":17,"endColumn":27},{"ruleId":"82","severity":1,"message":"86","line":1,"column":17,"nodeType":"84","messageId":"85","endLine":1,"endColumn":26},{"ruleId":"82","severity":1,"message":"110","line":2,"column":8,"nodeType":"84","messageId":"85","endLine":2,"endColumn":13},"no-native-reassign",["111"],"no-negated-in-lhs",["112"],"no-unused-vars","'React' is defined but never used.","Identifier","unusedVar","'Component' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","'globalState' is assigned a value but never used.","'loading' is assigned a value but never used.","'error' is assigned a value but never used.","'setFields' is assigned a value but never used.","'onFieldChange' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'useEffect' is defined but never used.","'useState' is defined but never used.","'bigForecast' is defined but never used.","'dispatch' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","'currentDate' is assigned a value but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","'Chart' is defined but never used.","no-global-assign","no-unsafe-negation"]