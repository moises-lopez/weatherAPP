[{"C:\\Users\\Moises\\Documents\\Projects\\weather-app\\src\\index.js":"1","C:\\Users\\Moises\\Documents\\Projects\\weather-app\\src\\reportWebVitals.js":"2","C:\\Users\\Moises\\Documents\\Projects\\weather-app\\src\\App.js":"3","C:\\Users\\Moises\\Documents\\Projects\\weather-app\\src\\state\\mainState.js":"4","C:\\Users\\Moises\\Documents\\Projects\\weather-app\\src\\components\\navbar.jsx":"5","C:\\Users\\Moises\\Documents\\Projects\\weather-app\\src\\components\\navbarNB.jsx":"6","C:\\Users\\Moises\\Documents\\Projects\\weather-app\\src\\components\\home.jsx":"7","C:\\Users\\Moises\\Documents\\Projects\\weather-app\\src\\components\\form.jsx":"8","C:\\Users\\Moises\\Documents\\Projects\\weather-app\\src\\components\\display.jsx":"9","C:\\Users\\Moises\\Documents\\Projects\\weather-app\\src\\components\\forecast.jsx":"10","C:\\Users\\Moises\\Documents\\Projects\\weather-app\\src\\components\\lineChart.jsx":"11","C:\\Users\\Moises\\Documents\\Projects\\weather-app\\src\\components\\bigForecast.jsx":"12"},{"size":543,"mtime":1609715331106,"results":"13","hashOfConfig":"14"},{"size":362,"mtime":499162500000,"results":"15","hashOfConfig":"14"},{"size":828,"mtime":1609821876655,"results":"16","hashOfConfig":"14"},{"size":1447,"mtime":1609804482413,"results":"17","hashOfConfig":"14"},{"size":551,"mtime":1609715830918,"results":"18","hashOfConfig":"14"},{"size":785,"mtime":1609821876658,"results":"19","hashOfConfig":"14"},{"size":368,"mtime":1609901186824,"results":"20","hashOfConfig":"14"},{"size":4513,"mtime":1609903548389,"results":"21","hashOfConfig":"14"},{"size":1134,"mtime":1609803628092,"results":"22","hashOfConfig":"14"},{"size":1403,"mtime":1609903548388,"results":"23","hashOfConfig":"14"},{"size":1434,"mtime":1609903548390,"results":"24","hashOfConfig":"14"},{"size":1432,"mtime":1609903548388,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"135azhc",{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33","usedDeprecatedRules":"28"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36","usedDeprecatedRules":"28"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"28"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42","usedDeprecatedRules":"28"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"28"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"28"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"28"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"28"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":2,"source":"57"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60","usedDeprecatedRules":"28"},"C:\\Users\\Moises\\Documents\\Projects\\weather-app\\src\\index.js",[],["61","62"],"C:\\Users\\Moises\\Documents\\Projects\\weather-app\\src\\reportWebVitals.js",[],"C:\\Users\\Moises\\Documents\\Projects\\weather-app\\src\\App.js",["63"],"import \"./App.css\";\r\nimport { useReducer } from \"react\";\r\nimport NavBar from \"./components/navbar\";\r\nimport NavbarNB from './components/navbarNB'\r\nimport Home from \"./components/home\";\r\n\r\nimport { main, mainStateReducer } from \"./state/mainState\";\r\n\r\nimport './css/form.css'\r\n\r\nfunction App() {\r\n  let [mainState, stateDispatch] = useReducer(mainStateReducer, {\r\n    city: \"\",\r\n    country: \"\",\r\n    result: \"\",\r\n    temperatureSeason: \"\",\r\n    Rtemperature: 0,\r\n    FTemperature: 0,\r\n    Humidity: 0,\r\n    Pressure: 0,\r\n    forecast: {},\r\n    chatbot: false,\r\n  });\r\n\r\n  return (\r\n    <main.Provider value={{ state: mainState, dispatch: stateDispatch }}>\r\n      <div className=\"App bodyW \">\r\n        {/* <NavBar /> */}\r\n        <NavbarNB/>\r\n        <Home />\r\n      </div>\r\n    </main.Provider>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","C:\\Users\\Moises\\Documents\\Projects\\weather-app\\src\\state\\mainState.js",["64","65"],"import React, { Component, createContext } from \"react\";\r\n\r\nconst globalState = {\r\n  city: \"\",\r\n  country: \"\",\r\n  result: \"\",\r\n  temperatureSeason: \"\",\r\n  Rtemperature: 0,\r\n  FTemperature: 0,\r\n  Humidity: 0,\r\n  Pressure: 0,\r\n  forecast: {},\r\n  loading: false,\r\n  chatbot: false,\r\n};\r\n\r\nconst main = createContext(globalState);\r\n\r\nconst mainStateReducer = (state, action) => {\r\n  switch (action.type) {\r\n    case \"TOGGLE_MODAL\":\r\n      return { ...state, chatBot: !state.chatbot };\r\n    case \"CHANGE_CITY\":\r\n      return { ...state, city: action.payload.city };\r\n    case \"SET_STATE\":\r\n      return { ...state, result: action.payload.result };\r\n    case \"SET_COUNTRY\":\r\n      return { ...state, contry: action.payload.country };\r\n    case \"TEMPERATRUE_SEASON\":\r\n      return { ...state, temperatureSeason: action.payload.country };\r\n    case \"R_TEMPERATURE\":\r\n      return { ...state, Rtemperature: action.payload.Rtemperature };\r\n    case \"L_TEMPERATURE\":\r\n      return { ...state, Ltemperature: action.payload.Ltemperature };\r\n    case \"Humidity\":\r\n      return { ...state, Humidity: action.payload.Humidity };\r\n    case \"Pressure\":\r\n      return { ...state, Pressure: action.payload.Pressure };\r\n    case \"Forecast\":\r\n      return { ...state, forecast: action.payload.Forecast };\r\n    case \"Loading\":\r\n      return { ...state, loading: action.payload.loading };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport { main, mainStateReducer };\r\n","C:\\Users\\Moises\\Documents\\Projects\\weather-app\\src\\components\\navbar.jsx",["66"],"import React from \"react\";\r\n\r\nconst NavBar = () => {\r\n  return (\r\n    <React.Fragment>\r\n      <nav className=\"navbar navbar-light bg-light\">\r\n        <div className=\"container\">\r\n          <a className=\"navbar-brand\">\r\n            <img\r\n              src=\"https://cdn.iconscout.com/icon/free/png-256/sunny-weather-1-458138.png\"\r\n              alt=\"\"\r\n              width=\"50\"\r\n              height=\"50\"\r\n            />\r\n            Daru Weather\r\n          </a>\r\n        </div>\r\n      </nav>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default NavBar;\r\n","C:\\Users\\Moises\\Documents\\Projects\\weather-app\\src\\components\\navbarNB.jsx",["67","68"],"import React, { Component } from 'react';\r\n\r\nimport '../css/navbar.css'\r\n\r\nconst NavbarNB = () => {\r\n\r\n    return ( \r\n        <React.Fragment>    \r\n        <nav className=\"navbar\">\r\n            <span className=\"navbar-toggle\" id=\"js-navbar-toggle\">\r\n                <i className=\"fas fa-bars\"></i>\r\n            </span>\r\n            \r\n            <a  className=\"logo\">Daru Weather\r\n            <img\r\n              src=\"https://cdn.iconscout.com/icon/free/png-256/sunny-weather-1-458138.png\"\r\n              alt=\"\"\r\n              width=\"50\"\r\n              height=\"50\"\r\n            />\r\n            </a>\r\n            \r\n            <ul className=\"main-nav\" id=\"js-menu\">\r\n                \r\n            </ul>\r\n        </nav>\r\n        </React.Fragment>\r\n     );\r\n}\r\n \r\nexport default NavbarNB;","C:\\Users\\Moises\\Documents\\Projects\\weather-app\\src\\components\\home.jsx",["69"],"import React, { Component } from \"react\";\r\nimport Form from \"./form\";\r\nimport Display from \"./display\";\r\n\r\nimport \"../css/form.css\";\r\nimport CardsForecast from \"./forecast\";\r\n\r\nconst Home = () => {\r\n  return (\r\n    <React.Fragment>\r\n      <Form className=\"bodyW\" />\r\n      <Display />\r\n      <CardsForecast />\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","C:\\Users\\Moises\\Documents\\Projects\\weather-app\\src\\components\\form.jsx",["70","71","72","73","74","75","76"],"import React, { Component, useContext, useState } from \"react\";\r\nimport axios from \"axios\";\r\n\r\nimport { main } from \"../state/mainState\";\r\n\r\nimport \"../css/form.css\";\r\n\r\nconst Form = () => {\r\n  let { state: globalState, dispatch } = useContext(main);\r\n\r\n  let [keyword, setKeyword] = useState(\"\");\r\n\r\n  let [cities, setCities] = useState([]);\r\n\r\n  let [loading, setLoading] = useState(false);\r\n  let [error, setError] = useState(false);\r\n\r\n  let [fields, setFields] = useState({\r\n    username: \"\",\r\n    password: \"\",\r\n    email: \"\",\r\n    name: \"\",\r\n    phone: \"\",\r\n    age: 0,\r\n  });\r\n\r\n  const onFieldChange = (e) => {\r\n    let { id, value } = e.target;\r\n\r\n    let fieldsCopy = { ...fields };\r\n\r\n    fieldsCopy[id] = value;\r\n  };\r\n\r\n  const handleSearch = async (name, url) => {\r\n    const city = name;\r\n\r\n    try {\r\n      setLoading(true);\r\n      dispatch({ type: \"Loading\", payload: { loading: true } });\r\n\r\n      // const data = await axios.get(\r\n      //   `http://api.openweathermap.org/data/2.5/weather?q=${city}&appid=c41d6eca7b601b2cc4a19fbac586dc5e`\r\n      // );\r\n      const data4days = await axios.get(\r\n        `http://api.weatherapi.com/v1/forecast.json?key=139f916626ab43b9a1d44405210401&q=${city}&days=7`\r\n      );\r\n\r\n      dispatch({ type: \"Forecast\", payload: { Forecast: data4days } });\r\n\r\n      // dispatch({\r\n      //   type: \"SET_STATE\",\r\n      //   payload: { result: data.data.weather[0].description },\r\n      // });\r\n\r\n      // dispatch({\r\n      //   type: \"SET_COUNTRY\",\r\n      //   payload: { country: data.data.sys.country },\r\n      // });\r\n\r\n      // dispatch({\r\n      //   type: \"TEMPERATRUE_SEASON\",\r\n      //   payload: { temperatureSeason: data.data.weather[0].main },\r\n      // });\r\n\r\n      // dispatch({\r\n      //   type: \"R_TEMPERATURE\",\r\n      //   payload: { Rtemperature: data.data.main.temp },\r\n      // });\r\n\r\n      // dispatch({\r\n      //   type: \"L_TEMPERATURE\",\r\n      //   payload: { Ltemperature: data.data.main.feels_like },\r\n      // });\r\n\r\n      // dispatch({\r\n      //   type: \"Humidity\",\r\n      //   payload: { Humidity: data.data.main.humidity },\r\n      // });\r\n\r\n      // dispatch({\r\n      //   type: \"Pressure\",\r\n      //   payload: { Pressure: data.data.main.pressure },\r\n      // });\r\n    } catch (err) {\r\n      setLoading(false);\r\n\r\n      setError(true);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n    dispatch({ type: \"Loading\", payload: { loading: false } });\r\n  };\r\n\r\n  const onCitySelect = (name, url) => {\r\n    setKeyword(name);\r\n    handleSearch(name, url);\r\n    setCities([]);\r\n  };\r\n\r\n  let renderCities = cities.map(({ id, name, region, url }) => {\r\n    return (\r\n      <CityOption\r\n        key={id}\r\n        id={id}\r\n        url={url}\r\n        onCitySelect={onCitySelect}\r\n        name={name}\r\n        region={region}\r\n      />\r\n    );\r\n  });\r\n\r\n  const handleChange = async (e) => {\r\n    setKeyword(e.target.value);\r\n\r\n    if (e.target.value.length == 0) return;\r\n\r\n    const apiKey = \"139f916626ab43b9a1d44405210401\";\r\n\r\n    try {\r\n      let { data } = await axios.get(\r\n        `http://api.weatherapi.com/v1/search.json?key=${apiKey}&q=${e.target.value}`\r\n      );\r\n\r\n      setCities(data);\r\n    } catch (err) {\r\n      console.log(err.message);\r\n    }\r\n\r\n    //api call\r\n\r\n    // dispatch({ type: \"CHANGE_CITY\", payload: { city: e.currentTarget.value } });\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <div className=\"test \">\r\n        <form className=\"search\" autoComplete=\"off\" onSubmit={() => {}}>\r\n          <div className=\"form-group dropdown\">\r\n            <label htmlFor=\"cityname\">Write the name of your city here:</label>\r\n            <input\r\n              value={keyword}\r\n              id=\"cityname\"\r\n              type=\"text\"\r\n              autoComplete=\"new-password\"\r\n              name=\"city\"\r\n              className=\"form-control\"\r\n              onChange={handleChange}\r\n            />\r\n            <div className=\"centered dropdown-content\">\r\n              <div>{renderCities}</div>\r\n            </div>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nconst CityOption = ({ name, id, url, region, onCitySelect }) => {\r\n  let [isHovering, setHovering] = useState(false);\r\n\r\n  return (\r\n    <div\r\n      className={`autocomplete-items ${isHovering ? \"hover\" : \"\"}`}\r\n      onMouseEnter={() => setHovering(true)}\r\n      onMouseLeave={() => setHovering(false)}\r\n      onClick={() => onCitySelect(name, url)}\r\n    >\r\n      <p>{name}</p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Form;\r\n","C:\\Users\\Moises\\Documents\\Projects\\weather-app\\src\\components\\display.jsx",["77","78","79","80"],"import React, { Component, useContext } from \"react\";\r\n\r\nimport { main } from \"../state/mainState\";\r\n\r\nimport \"../css/form.css\";\r\n\r\nconst Display = () => {\r\n  let { state: globalState, dispatch } = useContext(main);\r\n  let currentDate = new Date().toLocaleDateString();\r\n\r\n  return (\r\n    <React.Fragment>\r\n      {/* <div className=\"flex_right weather_Font\">\r\n        <div className=\"display_flex_parent\">\r\n          <div className=\"display_flex_left\">\r\n            <p className=\"big_font\">{globalState.Rtemperature}°K</p>\r\n            <p className=\"grey_font\">{globalState.Ltemperature}°K</p>\r\n            <p className=\"small_font\">Humidity: {globalState.Humidity}</p>\r\n            <p className=\"small_font\">Pressure: {globalState.Pressure}</p>\r\n          </div>\r\n          <div className=\"display_flex_right medium_font\">\r\n            <p>{currentDate}</p>\r\n            <p>{globalState.temperatureSeason}</p>\r\n            <p>{`${globalState.city}, ${globalState.country}`}</p>\r\n            <p>{globalState.result}</p>\r\n          </div>\r\n        </div>\r\n      </div> */}\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default Display;\r\n","C:\\Users\\Moises\\Documents\\Projects\\weather-app\\src\\components\\forecast.jsx",["81","82","83","84","85","86"],"import React, { Component, useContext, useEffect, useState } from \"react\";\r\nimport { main } from \"../state/mainState\";\r\nimport Chart from \"./lineChart\";\r\nimport BigForecast from './bigForecast'\r\n\r\nimport \"../css/forecast.css\";\r\nconst CardsForecast = () => {\r\n  let { state: globalState, dispatch } = useContext(main);\r\n\r\n  let forecastData = globalState.forecast;\r\n\r\n  if (globalState.loading === true) {\r\n    return (\r\n      <div className=\"centered\">\r\n        <div className=\"loader\"></div>\r\n      </div>\r\n    );\r\n  }\r\n  if (!forecastData[\"data\"]) return null;\r\n\r\n  //console.log(\"forecast\", forecastData.forecast.forecastday);\r\n  let forecastArray = forecastData.data.forecast.forecastday;\r\n\r\n  //render cards\r\n  let mainCard = forecastArray[0]\r\n  forecastArray = forecastArray.filter( (el, index) => (\r\n   index != 0\r\n   ))\r\n\r\n  let cards = forecastArray.map((day) => (\r\n    <article id={day.date} key={day.date} className=\"card mycard padding \">\r\n      <p>{day.date}</p>\r\n      {console.log(\"map\")}\r\n      <img className=\"photo\" src={day.day.condition.icon}/>\r\n      <p>Promedio Temp : {day.day.avgtemp_c}</p>\r\n      <Chart data={day.hour} />\r\n    </article>\r\n  ));\r\n  console.log(cards, cards.length)\r\n  return (\r\n    <div>\r\n      <BigForecast\r\n        forecastValues={mainCard}\r\n      />\r\n      <section className=\"cards\">{cards}</section>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CardsForecast;\r\n","C:\\Users\\Moises\\Documents\\Projects\\weather-app\\src\\components\\lineChart.jsx",["87","88","89"],"import React, { PureComponent } from \"react\";\r\nimport {\r\n  AreaChart,\r\n  Area,\r\n  XAxis,\r\n  YAxis,\r\n  CartesianGrid,\r\n  Tooltip,\r\n  ResponsiveContainer,\r\n} from \"recharts\";\r\n\r\nexport default class Chart extends PureComponent {\r\n  render() {\r\n    console.log(this.props);\r\n    const { data: data, big: big } = this.props;\r\n\r\n    var dataArr = [];\r\n    let counter = 0;\r\n    data.map((hourData) => {\r\n      dataArr.push({\r\n        hour: counter,\r\n        ammount: hourData.temp_c,\r\n      });\r\n      counter++;\r\n    });\r\n\r\n    console.log(dataArr);\r\n    console.log(big, \"big\");\r\n\r\n    const smallW = 300;\r\n    const smallH = 100;\r\n    const bigW = 550;\r\n    const bigH = 200;\r\n\r\n    return (\r\n      <ResponsiveContainer\r\n        width={big ? bigW : smallW}\r\n        height={big ? bigH : smallH}\r\n        aspect={3}\r\n      >\r\n        <AreaChart\r\n          width={big ? bigW : smallW}\r\n          height={big ? bigH : smallH}\r\n          data={dataArr}\r\n          margin={{\r\n            top: 10,\r\n            right: 30,\r\n            left: 0,\r\n            bottom: 0,\r\n          }}\r\n        >\r\n          <CartesianGrid strokeDasharray=\"3 3\" />\r\n          <XAxis dataKey=\"hour\" />\r\n          <YAxis />\r\n          <Tooltip />\r\n          <Area\r\n            type=\"monotone\"\r\n            dataKey=\"ammount\"\r\n            stroke=\"#8884d8\"\r\n            fill=\"#8884d8\"\r\n          />\r\n        </AreaChart>\r\n      </ResponsiveContainer>\r\n    );\r\n  }\r\n}\r\n","C:\\Users\\Moises\\Documents\\Projects\\weather-app\\src\\components\\bigForecast.jsx",["90","91","92"],"import React, { Component, useContext } from \"react\";\r\nimport Chart from \"./lineChart\";\r\nimport \"../css/bigForecast.css\";\r\n\r\nimport { main } from \"../state/mainState\";\r\n\r\nconst BigForecast = ({ forecastValues }) => {\r\n  console.log(forecastValues, \"forecast\");\r\n\r\n  let { state: globalState, dispatch } = useContext(main);\r\n  return (\r\n    <React.Fragment>\r\n      <div className=\"width100\">\r\n        <div className=\"parentFlex\">\r\n          <div className=\"left_Flex\">\r\n            <p className=\"big_text\">{forecastValues.day.avgtemp_c}°C</p>\r\n            <p className=\"middle_text\">\r\n              Humidity: {forecastValues.day.avghumidity}\r\n            </p>\r\n            <p className=\"middle_text\">\r\n              Total Percipitation: {forecastValues.day.totalprecip_mm} mm\r\n            </p>\r\n          </div>\r\n          <div className=\"center_Flex\">\r\n            <Chart\r\n              data={forecastValues.hour}\r\n              big={true}\r\n              className=\"big_chart\"\r\n            />\r\n          </div>\r\n          <div className=\"right_Flex\">\r\n            <p className=\"big_date\">{forecastValues.date}</p>\r\n            <p className=\"medium_date\">{forecastValues.day.condition.text}</p>\r\n            <img src={forecastValues.day.condition.icon} />\r\n            <p className=\"medium_date\">{globalState.city}</p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default BigForecast;\r\n",{"ruleId":"93","replacedBy":"94"},{"ruleId":"95","replacedBy":"96"},{"ruleId":"97","severity":1,"message":"98","line":3,"column":8,"nodeType":"99","messageId":"100","endLine":3,"endColumn":14},{"ruleId":"97","severity":1,"message":"101","line":1,"column":8,"nodeType":"99","messageId":"100","endLine":1,"endColumn":13},{"ruleId":"97","severity":1,"message":"102","line":1,"column":17,"nodeType":"99","messageId":"100","endLine":1,"endColumn":26},{"ruleId":"103","severity":1,"message":"104","line":8,"column":11,"nodeType":"105","endLine":8,"endColumn":39},{"ruleId":"97","severity":1,"message":"102","line":1,"column":17,"nodeType":"99","messageId":"100","endLine":1,"endColumn":26},{"ruleId":"103","severity":1,"message":"104","line":14,"column":13,"nodeType":"105","endLine":14,"endColumn":34},{"ruleId":"97","severity":1,"message":"102","line":1,"column":17,"nodeType":"99","messageId":"100","endLine":1,"endColumn":26},{"ruleId":"97","severity":1,"message":"102","line":1,"column":17,"nodeType":"99","messageId":"100","endLine":1,"endColumn":26},{"ruleId":"97","severity":1,"message":"106","line":9,"column":16,"nodeType":"99","messageId":"100","endLine":9,"endColumn":27},{"ruleId":"97","severity":1,"message":"107","line":15,"column":8,"nodeType":"99","messageId":"100","endLine":15,"endColumn":15},{"ruleId":"97","severity":1,"message":"108","line":16,"column":8,"nodeType":"99","messageId":"100","endLine":16,"endColumn":13},{"ruleId":"97","severity":1,"message":"109","line":18,"column":16,"nodeType":"99","messageId":"100","endLine":18,"endColumn":25},{"ruleId":"97","severity":1,"message":"110","line":27,"column":9,"nodeType":"99","messageId":"100","endLine":27,"endColumn":22},{"ruleId":"111","severity":1,"message":"112","line":117,"column":31,"nodeType":"113","messageId":"114","endLine":117,"endColumn":33},{"ruleId":"97","severity":1,"message":"102","line":1,"column":17,"nodeType":"99","messageId":"100","endLine":1,"endColumn":26},{"ruleId":"97","severity":1,"message":"106","line":8,"column":16,"nodeType":"99","messageId":"100","endLine":8,"endColumn":27},{"ruleId":"97","severity":1,"message":"115","line":8,"column":29,"nodeType":"99","messageId":"100","endLine":8,"endColumn":37},{"ruleId":"97","severity":1,"message":"116","line":9,"column":7,"nodeType":"99","messageId":"100","endLine":9,"endColumn":18},{"ruleId":"97","severity":1,"message":"102","line":1,"column":17,"nodeType":"99","messageId":"100","endLine":1,"endColumn":26},{"ruleId":"97","severity":1,"message":"117","line":1,"column":40,"nodeType":"99","messageId":"100","endLine":1,"endColumn":49},{"ruleId":"97","severity":1,"message":"118","line":1,"column":51,"nodeType":"99","messageId":"100","endLine":1,"endColumn":59},{"ruleId":"97","severity":1,"message":"115","line":8,"column":29,"nodeType":"99","messageId":"100","endLine":8,"endColumn":37},{"ruleId":"111","severity":1,"message":"119","line":27,"column":10,"nodeType":"113","messageId":"114","endLine":27,"endColumn":12},{"ruleId":"120","severity":1,"message":"121","line":34,"column":7,"nodeType":"105","endLine":34,"endColumn":60},{"ruleId":"122","severity":1,"message":"123","line":15,"column":13,"nodeType":"124","messageId":"125","endLine":15,"endColumn":23,"fix":"126"},{"ruleId":"122","severity":1,"message":"127","line":15,"column":25,"nodeType":"124","messageId":"125","endLine":15,"endColumn":33,"fix":"128"},{"ruleId":"129","severity":1,"message":"130","line":19,"column":25,"nodeType":"131","messageId":"132","endLine":19,"endColumn":27},{"ruleId":"97","severity":1,"message":"102","line":1,"column":17,"nodeType":"99","messageId":"100","endLine":1,"endColumn":26},{"ruleId":"97","severity":1,"message":"115","line":10,"column":29,"nodeType":"99","messageId":"100","endLine":10,"endColumn":37},{"ruleId":"120","severity":1,"message":"121","line":34,"column":13,"nodeType":"105","endLine":34,"endColumn":60},"no-native-reassign",["133"],"no-negated-in-lhs",["134"],"no-unused-vars","'NavBar' is defined but never used.","Identifier","unusedVar","'React' is defined but never used.","'Component' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","'globalState' is assigned a value but never used.","'loading' is assigned a value but never used.","'error' is assigned a value but never used.","'setFields' is assigned a value but never used.","'onFieldChange' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'dispatch' is assigned a value but never used.","'currentDate' is assigned a value but never used.","'useEffect' is defined but never used.","'useState' is defined but never used.","Expected '!==' and instead saw '!='.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","no-useless-rename","Destructuring assignment data unnecessarily renamed.","Property","unnecessarilyRenamed",{"range":"135","text":"136"},"Destructuring assignment big unnecessarily renamed.",{"range":"137","text":"138"},"array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","no-global-assign","no-unsafe-negation",[284,294],"data",[296,304],"big"]